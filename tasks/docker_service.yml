---
#### Docker Compose Service Images
- name: Manage Docker Compose Service Images
  community.docker.docker_image:
    name: "{{ docker_image }}"
    source: pull
    force_source: "{{ _rpi_setup_docker_service.docker_images_force | d(omit) }}"
  loop: "{{ _rpi_setup_docker_service.docker_images }}"
  loop_control:
    loop_var: docker_image
  become: true
  when: _rpi_setup_docker_service.docker_images | d([], true) | length
  async: "{{ ansible_check_mode | ternary(0, 1800) }}"
  poll: 10


#### Docker Compose Service Users
- name: Manage Docker Compose Service users
  ansible.builtin.user:
    name: "{{ service_user.name }}"
    password: "{{ service_user.password | password_hash('sha512') }}"
    uid: "{{ service_user.uid }}"
    groups: "{{ service_user.groups | d(omit) }}"
    shell: "{{ service_user.shell | d(omit) }}"
  loop: "{{ _rpi_setup_docker_service.users | d([], true) }}"
  loop_control:
    loop_var: service_user
  become: true


#### Docker Compose Service folders
- name: Manage Docker Compose Service project folder
  ansible.builtin.file:
    path: "{{ _rpi_setup_docker_service.project_path }}"
    state: directory
    owner: root
    group: root
    mode: 0750
  become: true

- name: Manage Docker Compose Service secrets folder
  ansible.builtin.file:
    path: "{{ _rpi_setup_docker_service.project_path }}/docker_secrets"
    state: directory
    owner: root
    group: root
    mode: 0750
  become: true
  when: _rpi_setup_docker_service.docker_secrets | d([], true) | selectattr('type', 'eq', 'file') | length
  no_log: "{{ rpi_setup_nolog_override | d(true) | bool }}"


#### Docker Compose Service secrets
- name: Manage Docker Compose Global Secrets (external) # noqa args[module]
  community.docker.docker_secret: "{{ docker_secret_external.configuration }}"
  loop: "{{ _rpi_setup_docker_service.docker_secrets | d({}, true) | selectattr('type', 'eq', 'external') }}"
  loop_control:
    loop_var: docker_secret_external
  become: true
  when: _rpi_setup_docker_service.docker_secrets | d([], true) | selectattr('type', 'eq', 'external') | length
  no_log: "{{ rpi_setup_nolog_override | d(true) | bool }}"

- name: Manage Docker Compose Service Secrets (file)
  ansible.builtin.copy:
    dest: "{{ _rpi_setup_docker_service.project_path }}/docker_secrets/{{ docker_secret_file.filename }}"
    content: |
      {{ docker_secret_file.content }}
    owner: root
    group: root
    mode: 0640
  loop: "{{ _rpi_setup_docker_service.docker_secrets | d([], true) | selectattr('type', 'eq', 'file') }}"
  loop_control:
    loop_var: docker_secret_file
  become: true
  when: _rpi_setup_docker_service.docker_secrets | d([], true) | selectattr('type', 'eq', 'file') | length
  no_log: "{{ rpi_setup_nolog_override | d(true) | bool }}"


#### Docker Compose Service environment
- name: Manage Docker Compose Service static env file
  ansible.builtin.copy:
    dest: "{{ _rpi_setup_docker_service.project_path }}/.env"
    content: |
      {{ _rpi_setup_docker_service.docker_env }}
    owner: root
    group: root
    mode: 0640
  become: true
  when: _rpi_setup_docker_service.docker_env | d(false, true)
  no_log: "{{ rpi_setup_nolog_override | d(true) | bool }}"

- name: Manage Docker Compose Service dynamic env start script
  ansible.builtin.copy:
    dest: "{{ _rpi_setup_docker_service.project_path }}/dynamic_env_start.sh"
    content: |
      {{ _rpi_setup_docker_service.docker_dynamic_env }}
      # Start Docker Compose service
      /usr/bin/docker compose up -d --remove-orphans
      exit $?
    owner: root
    group: root
    mode: 0740
  become: true
  when: _rpi_setup_docker_service.docker_dynamic_env | d(false, true)
  no_log: "{{ rpi_setup_nolog_override | d(true) | bool }}"

- name: Manage Docker Compose Service dynamic env stop script
  ansible.builtin.copy:
    dest: "{{ _rpi_setup_docker_service.project_path }}/dynamic_env_stop.sh"
    content: |
      {{ _rpi_setup_docker_service.docker_dynamic_env }}
      # Stop Docker Compose service
      /usr/bin/docker compose down
      exit $?
    owner: root
    group: root
    mode: 0740
  become: true
  when: _rpi_setup_docker_service.docker_dynamic_env | d(false, true)
  no_log: "{{ rpi_setup_nolog_override | d(true) | bool }}"

#### Docker Compose Service project
# Added regex_replace after to_nice_yaml to apply indent=2 also at list elements
# Source: https://github.com/ansible/ansible/issues/66932#issuecomment-580300418
- name: Manage Docker Compose Service project file
  ansible.builtin.copy:
    dest: "{{ _rpi_setup_docker_service.project_path }}/docker-compose.yml"
    content: |
      ---
      {{ _rpi_setup_docker_service.configuration | to_nice_yaml(indent=2, width=9999, sort_keys=False) | regex_replace('\n( *  - )', '\n  \1') }}
    owner: root
    group: root
    mode: 0640
  become: true

- name: Manage Docker Compose Service systemd unit
  ansible.builtin.template:
    src: docker-service.service.j2
    dest: "/etc/systemd/system/docker-{{ _rpi_setup_docker_service.name }}.service"
    owner: root
    group: root
    mode: 0644
  become: true

- name: Manage Docker Compose Service systemd service
  ansible.builtin.systemd:
    name: "docker-{{ _rpi_setup_docker_service.name }}.service"
    state: "{{ _rpi_setup_docker_service.state | d(omit) }}"
    enabled: "{{ _rpi_setup_docker_service.enabled | bool }}"
    daemon_reload: true
  become: true
